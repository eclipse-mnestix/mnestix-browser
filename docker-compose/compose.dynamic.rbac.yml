services:
  security-submodel:
    image: eclipsebasyx/submodel-repository:2.0.0-milestone-05
    container_name: security-submodel
    ports:
      - '8089:8081'
    depends_on:
      keycloak:
        condition: service_healthy
    environment:
      BASYX__BACKEND: MongoDB
      SPRING__DATA__MONGODB__HOST: mongodb
      SPRING__DATA__MONGODB__DATABASE: basyxdb-security
      SPRING__DATA__MONGODB__authentication-database: admin
      SPRING__DATA__MONGODB__USERNAME: mongoAdmin
      SPRING__DATA__MONGODB__PASSWORD: mongoPassword
      BASYX__CORS__ALLOWED-ORIGINS: '*'
      BASYX__CORS__ALLOWED-METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
      # Authentication - for the future
      basyx.feature.authorization.enabled: "true"
      basyx.feature.authorization.type: rbac
      basyx.feature.authorization.jwtBearerTokenProvider: keycloak
      basyx.feature.authorization.rbac.file: file:/data/rbac_rules.json
      spring.security.oauth2.resourceserver.jwt.issuer-uri: "http://keycloak:8080/realms/Mnestix"
      # Allow mnestix frontend and backend to call basyx
      BASYX_CORS_ALLOWED-ORIGINS: '*'
      BASYX_CORS_ALLOWED-METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
    healthcheck: # check the endpoint for a valid response (service ready)
      test: curl -f http://localhost:8081/actuator/health
      interval: 10s
      timeout: 10s
      retries: 6
    volumes:
      - ./docker-compose/data/keycloak/sec_sm_roles.json:/data/rbac_rules.json:ro
    networks:
      - mnestix-network
  
  aas-environment:
    environment:
      # Dynamic Roles configuration part:
      basyx.feature.authorization.rules.backend: "Submodel"
      basyx.feature.authorization.rules.backend.submodel.authorization.endpoint: 'http://security-submodel:8081/submodels/U2VjdXJpdHlTdWJtb2RlbA=='
      basyx.feature.authorization.rules.backend.submodel.authorization.token-endpoint: "http://keycloak:8080/realms/Mnestix/protocol/openid-connect/token"
      basyx.feature.authorization.rules.backend.submodel.authorization.grant-type: 'CLIENT_CREDENTIALS'
      basyx.feature.authorization.rules.backend.submodel.authorization.client-id: 'mnestix-repo-client-demo'
      basyx.feature.authorization.rules.backend.submodel.authorization.client-secret: ${REPOSITORY_API_CLIENT_SECRET:-WLOB68nSllHTlr7ViUOZWWxildWFT2nN} #Secret for Keycloak client
    depends_on:
      security-submodel:
        condition: service_healthy
      security-sm-setup:
        condition: service_completed_successfully
  
  security-sm-setup:
    container_name: security-sm-setup
    build:
      context: ./docker-compose/dynamic-rbac
    depends_on:
      security-submodel:
        condition: service_healthy
    restart: "no"
    volumes:
      - ./docker-compose/dynamic-rbac/entrypoint.sh:/entrypoint.sh
      - ./docker-compose/dynamic-rbac/initial-submodel.json:/initial-submodel.json
    entrypoint: [ "bash", "-c", "sh /entrypoint.sh" ]
    networks:
      - mnestix-network
