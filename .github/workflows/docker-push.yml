name: Docker Push & Release

on:
  push:
    branches: ['main', 'dev']
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/CODEOWNERS'
      - '.github/copilot-instructions.md'
      - 'wiki/**'
      - 'README.md'

concurrency:
  group: cd-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: mnestix/mnestix-browser

jobs:
  ci:
    uses: ./.github/workflows/ci.yml
    permissions:
      contents: read

  build-amd64-cache:
    name: Build amd64 image cache
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: '.'
          cache-from: mnestix/mnestix-browser:dev
          cache-to: type=local,dest=/tmp/buildx-amd64-cache,mode=max
          target: production
          push: false
          tags: mnestix/mnestix-browser:latest
          load: true

      - name: Cache buildx
        uses: actions/cache/save@v4
        with:
          path: |
            /tmp/buildx-amd64-cache
          key: buildx-amd64-${{github.ref}}-${{ github.run_id }}
          enableCrossOsArchive: true

      - name: Save mnestix-browser image
        run: docker save mnestix/mnestix-browser:latest -o mnestix-browser.tar

      - name: Cache image
        uses: actions/cache/save@v4
        with:
          path: mnestix-browser.tar
          key: docker-image-${{github.ref}}-${{ github.run_id }}

  # It takes 22 minutes to build the arm64 image in amd64-QEMU so we build a cache on the arm64 runner
  # Github Issues point to a yarn problem
  # https://github.com/docker/build-push-action/issues/471
  # https://github.com/nodejs/docker-node/issues/1335
  build-arm64-cache:
    name: Build arm64 image cache
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64
          context: '.'
          cache-to: type=local,dest=/tmp/buildx-arm64-cache,mode=max
          target: production
          push: false

      - name: Cache buildx
        uses: actions/cache/save@v4
        with:
          path: |
            /tmp/buildx-arm64-cache
          key: buildx-arm64-${{github.ref}}-${{ github.run_id }}
          enableCrossOsArchive: true

  push-image:
    name: Push docker image and release
    needs: ['build-amd64-cache', 'build-arm64-cache', 'ci']
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore amd64 cache
        uses: actions/cache/restore@v4
        with:
          path: |
            /tmp/buildx-amd64-cache
          key: buildx-amd64-${{github.ref}}-${{ github.run_id }}
          # Can be build without cache
          fail-on-cache-miss: false
      - name: Restore arm64 cache
        uses: actions/cache/restore@v4
        with:
          path: |
            /tmp/buildx-arm64-cache
          key: buildx-arm64-${{github.ref}}-${{ github.run_id }}
          # Build often fails without cache
          fail-on-cache-miss: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_API_TOKEN }}

      - name: Extract branch name
        if: github.ref == 'refs/heads/dev'
        id: extract_branch
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Build and push docker images
        uses: docker/build-push-action@v6
        if: github.ref == 'refs/heads/dev'
        with:
          platforms: linux/amd64,linux/arm64
          context: '.'
          cache-from: |
            type=local,src=/tmp/buildx-arm64-cache
            type=local,src=/tmp/buildx-amd64-cache
          target: production
          push: true
          tags: format('{0}:{1}', env.IMAGE_NAME, steps.extract_branch.outputs.branch)

      - uses: actions/setup-node@v4
        if: github.ref == 'refs/heads/main'
        with:
          cache: 'yarn'

      - name: Install release dependencies
        if: github.ref == 'refs/heads/main'
        run: yarn install --frozen-lockfile

      - name: Release
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn semantic-release
